version: "3"

includes:
  ui:
    taskfile: ui/Taskfile.yml
    dir: ui
    internal: true

  cmd:
    taskfile: cmd/Taskfile.yml
    dir: cmd
    internal: true

tasks:
  install:
    desc: install npm packages
    deps:
      - ui:install
      - cmd:install

  test:
    desc: run tests
    deps:
      - ui:test

  run:
    desc: run the UI
    deps:
      - ui:run

  build:
    desc: Build the UI and CLI
    deps:
      - ui:build
    cmds:
      # Create symlink from ui/dist to cmd/src/commands/web/dist
      # Use '|| true' to ignore error if link already exists
      - ln -sf ../../../../ui/dist ./cmd/src/commands/web || true
      # Update the import statements in index.ts
      - ./cmd/src/commands/web/update-web-imports.sh
      # Now build the cmd
      - task: cmd:build

  artifacts:
    desc: Create release artifacts (zip files for each OS/architecture)
    deps:
      - build # Ensure build is complete before creating artifacts
    cmds:
      # Create directories for each OS
      - mkdir -p analog-linux
      - mkdir -p analog-windows
      - mkdir -p analog-macos

      # Move binaries to their respective folders
      - mv cmd/analog-linux ./analog-linux/analog
      - mv cmd/analog-windows.exe ./analog-windows/analog.exe
      - mv cmd/analog-macos ./analog-macos/analog

      # Copy README.md to each folder
      - cp README.md ./analog-linux/
      - cp README.md ./analog-windows/
      - cp README.md ./analog-macos/

      # Create OS-specific archive files
      - tar -czf analog-linux.tar.gz analog-linux # .tar.gz for Linux
      - zip -r analog-windows.zip analog-windows # .zip for Windows
      - tar -czf analog-macos.tar.gz analog-macos # .tar.gz for macOS

      # Cleanup the temporary packaging directories
      - rm -rf analog-linux analog-windows analog-macos
